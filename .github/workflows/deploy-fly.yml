name: Deploy to Fly.io

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'production'
        type: choice
        options:
        - staging
        - production

env:
  FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

jobs:
  deploy-staging:
    if: github.ref == 'refs/heads/develop' || (github.event.inputs.environment == 'staging')
    runs-on: ubuntu-latest
    environment: staging

    steps:
    - uses: actions/checkout@v4

    - name: Setup Fly.io CLI
      uses: superfly/flyctl-actions/setup-flyctl@master

    - name: Deploy to Fly.io Staging
      run: |
        flyctl deploy --config fly.staging.toml --app eyehealth-staging
      env:
        FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

    - name: Run migrations on staging
      run: |
        flyctl ssh console --config fly.staging.toml --app eyehealth-staging -C "python manage.py migrate"

    - name: Collect static files on staging
      run: |
        flyctl ssh console --config fly.staging.toml --app eyehealth-staging -C "python manage.py collectstatic --noinput"

  deploy-production:
    if: github.ref == 'refs/heads/main' || (github.event.inputs.environment == 'production')
    runs-on: ubuntu-latest
    environment: production
    needs: []  # Remove staging dependency for direct main branch deploys

    steps:
    - uses: actions/checkout@v4

    - name: Setup Fly.io CLI
      uses: superfly/flyctl-actions/setup-flyctl@master

    - name: Deploy to Fly.io Production
      run: |
        flyctl deploy --config fly.toml --app eyehealth-2020
      env:
        FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

    - name: Run migrations on production
      run: |
        flyctl ssh console --config fly.toml --app eyehealth-2020 -C "python manage.py migrate"

    - name: Collect static files on production
      run: |
        flyctl ssh console --config fly.toml --app eyehealth-2020 -C "python manage.py collectstatic --noinput"

    - name: Health check
      run: |
        sleep 30
        curl -f https://eyehealth-2020.fly.dev/health/ || exit 1

  rollback:
    if: failure() && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: [deploy-production]
    environment: production

    steps:
    - uses: actions/checkout@v4

    - name: Setup Fly.io CLI
      uses: superfly/flyctl-actions/setup-flyctl@master

    - name: Rollback deployment
      run: |
        flyctl releases list --app eyehealth-2020 --json | jq -r '.[1].id' | xargs flyctl releases rollback --app eyehealth-2020