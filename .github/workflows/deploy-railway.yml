name: Deploy to Railway

on:
  push:
    branches: [ main, develop ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'production'
        type: choice
        options:
        - staging
        - production

jobs:
  deploy-staging:
    if: github.ref == 'refs/heads/develop' || (github.event.inputs.environment == 'staging')
    runs-on: ubuntu-latest
    environment: staging

    steps:
    - uses: actions/checkout@v4

    - name: Install Railway CLI
      run: |
        curl -fsSL https://railway.app/install.sh | sh
        echo "$HOME/.railway/bin" >> $GITHUB_PATH

    - name: Deploy to Railway Staging
      run: |
        railway login --token ${{ secrets.RAILWAY_TOKEN }}
        railway link ${{ secrets.RAILWAY_STAGING_PROJECT_ID }}
        railway up --detach
      env:
        RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}

    - name: Run migrations on staging
      run: |
        railway run python manage.py migrate
      env:
        RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}

    - name: Collect static files on staging
      run: |
        railway run python manage.py collectstatic --noinput
      env:
        RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}

  deploy-production:
    if: github.ref == 'refs/heads/main' || (github.event.inputs.environment == 'production')
    runs-on: ubuntu-latest
    environment: production

    steps:
    - uses: actions/checkout@v4

    - name: Install Railway CLI
      run: |
        curl -fsSL https://railway.app/install.sh | sh
        echo "$HOME/.railway/bin" >> $GITHUB_PATH

    - name: Deploy to Railway Production
      run: |
        railway login --token ${{ secrets.RAILWAY_TOKEN }}
        railway link ${{ secrets.RAILWAY_PRODUCTION_PROJECT_ID }}
        railway up --detach
      env:
        RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}

    - name: Run migrations on production
      run: |
        railway run python manage.py migrate
      env:
        RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}

    - name: Collect static files on production
      run: |
        railway run python manage.py collectstatic --noinput
      env:
        RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}

    - name: Health check
      run: |
        sleep 30
        RAILWAY_URL=$(railway domain | grep -o 'https://[^[:space:]]*')
        curl -f $RAILWAY_URL/health/ || exit 1
      env:
        RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}

  notify-deployment:
    runs-on: ubuntu-latest
    needs: [deploy-production]
    if: always()

    steps:
    - name: Notify deployment status
      run: |
        if [ "${{ needs.deploy-production.result }}" == "success" ]; then
          echo "✅ Production deployment successful"
        else
          echo "❌ Production deployment failed"
          exit 1
        fi