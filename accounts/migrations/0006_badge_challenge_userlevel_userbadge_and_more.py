# Generated by Django 4.2.16 on 2025-09-17 08:48

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('accounts', '0005_user_accounts_us_stripe__0997f8_idx_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Badge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField()),
                ('icon', models.CharField(blank=True, max_length=50)),
                ('category', models.CharField(default='general', max_length=50)),
                ('requires_streak_days', models.PositiveIntegerField(blank=True, null=True)),
                ('requires_sessions', models.PositiveIntegerField(blank=True, null=True)),
                ('requires_compliant_breaks', models.PositiveIntegerField(blank=True, null=True)),
                ('requires_perfect_days', models.PositiveIntegerField(blank=True, null=True)),
                ('special_requirements', models.JSONField(blank=True, default=dict)),
                ('is_active', models.BooleanField(default=True)),
                ('rarity', models.CharField(choices=[('common', 'Common'), ('rare', 'Rare'), ('epic', 'Epic'), ('legendary', 'Legendary')], default='common', max_length=10)),
                ('experience_reward', models.PositiveIntegerField(default=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Badge',
                'verbose_name_plural': 'Badges',
                'db_table': 'accounts_badge',
                'ordering': ['category', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Challenge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('challenge_type', models.CharField(choices=[('daily_streak', 'Daily Streak Challenge'), ('session_count', 'Session Count Challenge'), ('compliance_rate', 'Compliance Rate Challenge'), ('community', 'Community Challenge')], max_length=20)),
                ('target_value', models.PositiveIntegerField()),
                ('experience_reward', models.PositiveIntegerField(default=100)),
                ('is_active', models.BooleanField(default=True)),
                ('is_premium_only', models.BooleanField(default=False)),
                ('max_participants', models.PositiveIntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('badge_reward', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.badge')),
            ],
            options={
                'verbose_name': 'Challenge',
                'verbose_name_plural': 'Challenges',
                'db_table': 'accounts_challenge',
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='UserLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('current_level', models.PositiveIntegerField(default=1)),
                ('total_experience_points', models.PositiveIntegerField(default=0)),
                ('experience_to_next_level', models.PositiveIntegerField(default=100)),
                ('sessions_completed', models.PositiveIntegerField(default=0)),
                ('breaks_completed', models.PositiveIntegerField(default=0)),
                ('compliant_breaks', models.PositiveIntegerField(default=0)),
                ('achievements_earned', models.PositiveIntegerField(default=0)),
                ('perfect_days', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='level_data', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Level',
                'verbose_name_plural': 'User Levels',
                'db_table': 'accounts_userlevel',
            },
        ),
        migrations.CreateModel(
            name='UserBadge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('earned_at', models.DateTimeField(auto_now_add=True)),
                ('progress_data', models.JSONField(blank=True, default=dict)),
                ('badge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.badge')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='earned_badges', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Badge',
                'verbose_name_plural': 'User Badges',
                'db_table': 'accounts_userbadge',
                'ordering': ['-earned_at'],
                'unique_together': {('user', 'badge')},
            },
        ),
        migrations.CreateModel(
            name='ChallengeParticipation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('current_progress', models.PositiveIntegerField(default=0)),
                ('is_completed', models.BooleanField(default=False)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('final_rank', models.PositiveIntegerField(blank=True, null=True)),
                ('joined_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('challenge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='participants', to='accounts.challenge')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='challenge_participations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Challenge Participation',
                'verbose_name_plural': 'Challenge Participations',
                'db_table': 'accounts_challengeparticipation',
                'ordering': ['-current_progress'],
                'unique_together': {('user', 'challenge')},
            },
        ),
    ]
