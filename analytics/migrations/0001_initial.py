# Generated by Django 4.2.16 on 2025-08-20 13:42

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='WeeklyStats',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('week_start_date', models.DateField()),
                ('week_end_date', models.DateField()),
                ('total_work_minutes', models.PositiveIntegerField(default=0)),
                ('total_intervals_completed', models.PositiveIntegerField(default=0)),
                ('total_breaks_taken', models.PositiveIntegerField(default=0)),
                ('total_sessions', models.PositiveIntegerField(default=0)),
                ('active_days', models.PositiveIntegerField(default=0)),
                ('average_daily_work_minutes', models.FloatField(default=0.0)),
                ('average_daily_breaks', models.FloatField(default=0.0)),
                ('total_breaks_compliant', models.PositiveIntegerField(default=0)),
                ('weekly_compliance_rate', models.FloatField(default=0.0)),
                ('weekly_productivity_score', models.FloatField(default=0.0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='weekly_stats', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Weekly Statistics',
                'verbose_name_plural': 'Weekly Statistics',
                'db_table': 'analytics_weekly_stats',
                'ordering': ['-week_start_date'],
                'unique_together': {('user', 'week_start_date')},
            },
        ),
        migrations.CreateModel(
            name='UserBehaviorEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_type', models.CharField(choices=[('login', 'User Login'), ('logout', 'User Logout'), ('session_start', 'Timer Session Started'), ('session_end', 'Timer Session Ended'), ('break_reminder_shown', 'Break Reminder Shown'), ('break_taken', 'Break Taken'), ('break_skipped', 'Break Skipped'), ('settings_changed', 'Settings Modified'), ('subscription_upgraded', 'Subscription Upgraded'), ('subscription_downgraded', 'Subscription Downgraded'), ('email_opened', 'Email Notification Opened'), ('feature_used', 'Feature Used')], max_length=30)),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('event_data', models.JSONField(blank=True, default=dict)),
                ('session_id', models.CharField(blank=True, max_length=100)),
                ('user_agent', models.TextField(blank=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='behavior_events', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Behavior Event',
                'verbose_name_plural': 'User Behavior Events',
                'db_table': 'analytics_user_behavior_event',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['user', 'event_type', 'timestamp'], name='analytics_u_user_id_62419d_idx'), models.Index(fields=['timestamp'], name='analytics_u_timesta_d27440_idx')],
            },
        ),
        migrations.CreateModel(
            name='MonthlyStats',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.PositiveIntegerField()),
                ('month', models.PositiveIntegerField()),
                ('total_work_minutes', models.PositiveIntegerField(default=0)),
                ('total_intervals_completed', models.PositiveIntegerField(default=0)),
                ('total_breaks_taken', models.PositiveIntegerField(default=0)),
                ('total_sessions', models.PositiveIntegerField(default=0)),
                ('active_days', models.PositiveIntegerField(default=0)),
                ('most_productive_day_of_week', models.CharField(blank=True, max_length=10)),
                ('most_productive_hour', models.PositiveIntegerField(blank=True, null=True)),
                ('monthly_goal_minutes', models.PositiveIntegerField(default=0)),
                ('goal_achieved', models.BooleanField(default=False)),
                ('estimated_eye_strain_reduction', models.FloatField(default=0.0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='monthly_stats', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Monthly Statistics',
                'verbose_name_plural': 'Monthly Statistics',
                'db_table': 'analytics_monthly_stats',
                'ordering': ['-year', '-month'],
                'unique_together': {('user', 'year', 'month')},
            },
        ),
        migrations.CreateModel(
            name='EngagementMetrics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('daily_active', models.BooleanField(default=False)),
                ('session_duration_minutes', models.PositiveIntegerField(default=0)),
                ('pages_visited', models.PositiveIntegerField(default=0)),
                ('features_used', models.PositiveIntegerField(default=0)),
                ('breaks_interaction_score', models.FloatField(default=0.0)),
                ('settings_customization_score', models.FloatField(default=0.0)),
                ('days_since_last_active', models.PositiveIntegerField(default=0)),
                ('risk_of_churn', models.FloatField(default=0.0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='engagement_metrics', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Engagement Metrics',
                'verbose_name_plural': 'Engagement Metrics',
                'db_table': 'analytics_engagement_metrics',
                'ordering': ['-date'],
                'unique_together': {('user', 'date')},
            },
        ),
        migrations.CreateModel(
            name='DailyStats',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('total_work_minutes', models.PositiveIntegerField(default=0)),
                ('total_intervals_completed', models.PositiveIntegerField(default=0)),
                ('total_breaks_taken', models.PositiveIntegerField(default=0)),
                ('total_sessions', models.PositiveIntegerField(default=0)),
                ('breaks_on_time', models.PositiveIntegerField(default=0)),
                ('breaks_compliant', models.PositiveIntegerField(default=0)),
                ('average_break_duration', models.FloatField(default=0.0)),
                ('streak_maintained', models.BooleanField(default=False)),
                ('productivity_score', models.FloatField(default=0.0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='daily_stats', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Daily Statistics',
                'verbose_name_plural': 'Daily Statistics',
                'db_table': 'analytics_daily_stats',
                'ordering': ['-date'],
                'unique_together': {('user', 'date')},
            },
        ),
    ]
