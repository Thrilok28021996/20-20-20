# Generated by Django 4.2.16 on 2025-08-20 15:24

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('analytics', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='RealTimeMetrics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('active_users_count', models.PositiveIntegerField(default=0)),
                ('active_sessions_count', models.PositiveIntegerField(default=0)),
                ('users_in_break', models.PositiveIntegerField(default=0)),
                ('users_working', models.PositiveIntegerField(default=0)),
                ('total_breaks_today', models.PositiveIntegerField(default=0)),
                ('total_work_minutes_today', models.PositiveIntegerField(default=0)),
                ('total_sessions_today', models.PositiveIntegerField(default=0)),
                ('average_satisfaction_rating', models.FloatField(default=0.0)),
                ('nps_score', models.FloatField(default=0.0)),
                ('server_response_time_ms', models.PositiveIntegerField(default=0)),
                ('database_query_time_ms', models.PositiveIntegerField(default=0)),
            ],
            options={
                'verbose_name': 'Real-Time Metrics',
                'verbose_name_plural': 'Real-Time Metrics',
                'db_table': 'analytics_realtime_metrics',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='UserSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_key', models.CharField(max_length=100, unique=True)),
                ('login_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_activity', models.DateTimeField(default=django.utils.timezone.now)),
                ('logout_time', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('device_type', models.CharField(blank=True, max_length=20)),
                ('timer_sessions_started', models.PositiveIntegerField(default=0)),
                ('breaks_taken_in_session', models.PositiveIntegerField(default=0)),
                ('pages_viewed', models.PositiveIntegerField(default=0)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_sessions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Session',
                'verbose_name_plural': 'User Sessions',
                'db_table': 'analytics_user_session',
                'ordering': ['-last_activity'],
                'indexes': [models.Index(fields=['is_active', 'last_activity'], name='analytics_u_is_acti_ff3b85_idx'), models.Index(fields=['user', 'is_active'], name='analytics_u_user_id_f2faaa_idx')],
            },
        ),
        migrations.CreateModel(
            name='UserSatisfactionRating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveIntegerField(choices=[(1, '1 Stars'), (2, '2 Stars'), (3, '3 Stars'), (4, '4 Stars'), (5, '5 Stars')])),
                ('rating_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('context', models.CharField(choices=[('break_completion', 'After Break Completion'), ('session_end', 'After Session End'), ('weekly_summary', 'Weekly Summary'), ('monthly_report', 'Monthly Report'), ('feature_usage', 'Feature Usage'), ('general', 'General Rating')], default='general', max_length=20)),
                ('feedback_text', models.TextField(blank=True)),
                ('ease_of_use_rating', models.PositiveIntegerField(blank=True, choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], null=True)),
                ('effectiveness_rating', models.PositiveIntegerField(blank=True, choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], null=True)),
                ('reminder_helpfulness', models.PositiveIntegerField(blank=True, choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], null=True)),
                ('would_recommend', models.BooleanField(blank=True, null=True)),
                ('recommendation_score', models.PositiveIntegerField(blank=True, choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10)], help_text='0-10: How likely are you to recommend this to a friend?', null=True)),
                ('session_id', models.CharField(blank=True, max_length=100)),
                ('break_count_when_rated', models.PositiveIntegerField(default=0)),
                ('days_since_signup', models.PositiveIntegerField(default=0)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='satisfaction_ratings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Satisfaction Rating',
                'verbose_name_plural': 'User Satisfaction Ratings',
                'db_table': 'analytics_satisfaction_rating',
                'ordering': ['-rating_date'],
                'indexes': [models.Index(fields=['rating', 'rating_date'], name='analytics_s_rating_f9c6fe_idx'), models.Index(fields=['context', 'rating_date'], name='analytics_s_context_bcc182_idx')],
            },
        ),
        migrations.CreateModel(
            name='LiveActivityFeed',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('activity_type', models.CharField(choices=[('session_started', 'Started Timer Session'), ('break_taken', 'Took Break'), ('goal_achieved', 'Goal Achieved'), ('streak_milestone', 'Streak Milestone'), ('satisfaction_rating', 'Rated Experience'), ('subscription_upgrade', 'Upgraded Plan')], max_length=20)),
                ('activity_data', models.JSONField(blank=True, default=dict)),
                ('is_public', models.BooleanField(default=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activity_feed', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Live Activity',
                'verbose_name_plural': 'Live Activity Feed',
                'db_table': 'analytics_live_activity_feed',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['is_public', 'timestamp'], name='analytics_l_is_publ_50ef67_idx'), models.Index(fields=['activity_type', 'timestamp'], name='analytics_l_activit_c19a6b_idx')],
            },
        ),
    ]
