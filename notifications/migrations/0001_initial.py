# Generated by Django 4.2.16 on 2025-08-20 13:42

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='NotificationTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('notification_type', models.CharField(choices=[('break_reminder', 'Break Reminder'), ('daily_summary', 'Daily Summary'), ('weekly_report', 'Weekly Report'), ('streak_milestone', 'Streak Milestone'), ('subscription_expiring', 'Subscription Expiring'), ('welcome', 'Welcome Message'), ('tips', 'Eye Health Tips')], max_length=30)),
                ('subject_template', models.CharField(max_length=200)),
                ('html_template', models.TextField()),
                ('text_template', models.TextField()),
                ('title_template', models.CharField(max_length=100)),
                ('message_template', models.TextField()),
                ('target_subscription_types', models.JSONField(default=list)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Notification Template',
                'verbose_name_plural': 'Notification Templates',
                'db_table': 'notifications_template',
            },
        ),
        migrations.CreateModel(
            name='NotificationPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_enabled', models.BooleanField(default=True)),
                ('in_app_enabled', models.BooleanField(default=True)),
                ('browser_push_enabled', models.BooleanField(default=False)),
                ('desktop_enabled', models.BooleanField(default=True)),
                ('break_reminders', models.BooleanField(default=True)),
                ('daily_summaries', models.BooleanField(default=True)),
                ('weekly_reports', models.BooleanField(default=True)),
                ('streak_milestones', models.BooleanField(default=True)),
                ('tips_and_advice', models.BooleanField(default=False)),
                ('promotional_emails', models.BooleanField(default=False)),
                ('quiet_hours_start', models.TimeField(blank=True, null=True)),
                ('quiet_hours_end', models.TimeField(blank=True, null=True)),
                ('weekend_notifications', models.BooleanField(default=False)),
                ('break_reminder_advance_seconds', models.PositiveIntegerField(default=30)),
                ('max_snooze_count', models.PositiveIntegerField(default=3)),
                ('snooze_duration_minutes', models.PositiveIntegerField(default=5)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='notification_preferences', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Notification Preference',
                'verbose_name_plural': 'Notification Preferences',
                'db_table': 'notifications_preference',
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('notification_type', models.CharField(choices=[('break_reminder', 'Break Reminder'), ('daily_summary', 'Daily Summary'), ('weekly_report', 'Weekly Report'), ('streak_milestone', 'Streak Milestone'), ('subscription_expiring', 'Subscription Expiring'), ('welcome', 'Welcome Message'), ('tips', 'Eye Health Tips')], max_length=30)),
                ('channel', models.CharField(choices=[('in_app', 'In-App Notification'), ('email', 'Email'), ('browser_push', 'Browser Push'), ('desktop', 'Desktop Notification')], max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('sent', 'Sent'), ('delivered', 'Delivered'), ('read', 'Read'), ('clicked', 'Clicked'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('clicked_at', models.DateTimeField(blank=True, null=True)),
                ('action_url', models.URLField(blank=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('delivery_attempts', models.PositiveIntegerField(default=0)),
                ('last_attempt_at', models.DateTimeField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True)),
                ('template', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='notifications.notificationtemplate')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Notification',
                'verbose_name_plural': 'Notifications',
                'db_table': 'notifications_notification',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='EmailCampaign',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('target_audience', models.JSONField(default=dict)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('scheduled', 'Scheduled'), ('sending', 'Sending'), ('sent', 'Sent'), ('paused', 'Paused'), ('cancelled', 'Cancelled')], default='draft', max_length=20)),
                ('scheduled_at', models.DateTimeField(blank=True, null=True)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('total_recipients', models.PositiveIntegerField(default=0)),
                ('emails_sent', models.PositiveIntegerField(default=0)),
                ('emails_delivered', models.PositiveIntegerField(default=0)),
                ('emails_opened', models.PositiveIntegerField(default=0)),
                ('emails_clicked', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='notifications.notificationtemplate')),
            ],
            options={
                'verbose_name': 'Email Campaign',
                'verbose_name_plural': 'Email Campaigns',
                'db_table': 'notifications_email_campaign',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BreakReminder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timer_session_id', models.PositiveIntegerField(blank=True, null=True)),
                ('interval_number', models.PositiveIntegerField()),
                ('scheduled_time', models.DateTimeField()),
                ('reminder_type', models.CharField(choices=[('pre_break', 'Pre-Break Warning'), ('break_time', 'Break Time'), ('break_ending', 'Break Ending Soon')], default='break_time', max_length=20)),
                ('user_response', models.CharField(blank=True, choices=[('taken', 'Break Taken'), ('snoozed', 'Snoozed'), ('dismissed', 'Dismissed'), ('ignored', 'Ignored')], max_length=20)),
                ('response_time', models.DateTimeField(blank=True, null=True)),
                ('snooze_count', models.PositiveIntegerField(default=0)),
                ('snooze_until', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('notification', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='break_reminder', to='notifications.notification')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_break_reminders', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Break Reminder',
                'verbose_name_plural': 'Break Reminders',
                'db_table': 'notifications_break_reminder',
                'ordering': ['-scheduled_time'],
            },
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['user', 'status'], name='notificatio_user_id_7088ed_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['notification_type', 'created_at'], name='notificatio_notific_f2e0f7_idx'),
        ),
    ]
